{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodoId","className","map","todo","id","title","completed","type","onClick","TodoFilter","value","setValue","query","setQuery","onChange","event","currentTarget","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todoId","useState","isCardOpen","setIsCardOpen","user","setUser","currentTodo","find","useEffect","userId","response","href","email","name","App","setTodos","isLoading","setIsLoading","setTodoId","filterType","setFilterType","queryFilter","setQueryFilter","visibleTodos","filter","todoItem","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e133178.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number;\n  selectTodo: (value: number) => number | void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr key={id} data-cy=\"todo\">\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={completed ? 'has-text-success' : 'has-text-danger'}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    return selectedTodoId === id\n                      ? selectTodo(0)\n                      : selectTodo(id);\n                  }}\n                >\n                  <span className=\"icon\">\n                    {selectedTodoId === id ? (\n                      <i className=\"far fa-eye-slash\" />\n                    ) : (\n                      <i className=\"far fa-eye\" />\n                    )}\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FC, ChangeEvent } from 'react';\n\ntype Props = {\n  value: string;\n  setValue: (value: string) => string | void;\n  query: string;\n  setQuery: (value: string) => string | void;\n};\n\nexport const TodoFilter: FC<Props> = ({\n  value,\n  setValue,\n  query,\n  setQuery,\n}) => {\n  const handleChangeValue = (event: ChangeEvent<HTMLSelectElement>) => {\n    setValue(event.currentTarget.value);\n  };\n\n  const handleChangeQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.currentTarget.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={value}\n            onChange={handleChangeValue}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todoId: number;\n  todos: Todo[];\n  selectTodo: (value: number) => number | void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todoId, todos, selectTodo }) => {\n  const [isCardOpen, setIsCardOpen] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  const currentTodo = todos.find(todo => todo.id === todoId);\n\n  useEffect(() => {\n    if (currentTodo) {\n      getUser(currentTodo.userId)\n        .then(response => setUser(response));\n    }\n  }, []);\n\n  if (!isCardOpen) {\n    return null;\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setIsCardOpen(false);\n                selectTodo(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { FC, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [todoId, setTodoId] = useState(0);\n  const [filterType, setFilterType] = useState('all');\n  const [queryFilter, setQueryFilter] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then((response) => {\n        setTodos(response);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const filteredTodos = todos\n    .filter(todoItem => {\n      switch (filterType) {\n        case 'active':\n          return !todoItem.completed;\n\n        case 'completed':\n          return todoItem.completed;\n\n        default:\n          return true;\n      }\n    });\n\n  const visibleTodos = filteredTodos.filter(todoItem => {\n    return todoItem.title.toLowerCase().includes(queryFilter.toLowerCase());\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                value={filterType}\n                setValue={setFilterType}\n                query={queryFilter}\n                setQuery={setQueryFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodoId={todoId}\n                  selectTodo={(todo) => setTodoId(todo)}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {todoId !== 0 && (\n        <TodoModal\n          todoId={todoId}\n          todos={visibleTodos}\n          selectTodo={(todo) => setTodoId(todo)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}